import { createDefaultModule, DefaultModuleContext, inject, LangiumServices, Module, PartialLangiumServices } from 'langium';
import { ExpensesDslGeneratedModule } from './generated/module';
import { ExpensesDslValidationRegistry, ExpensesDslValidator } from './expenses-dsl-validator';

/**
 * Declaration of custom services - add your own service classes here.
 */
export type ExpensesDslAddedServices = {
    validation: {
        ExpensesDslValidator: ExpensesDslValidator
    }
}

/**
 * Union of Langium default services and your custom services - use this as constructor parameter
 * of custom service classes.
 */
export type ExpensesDslServices = LangiumServices & ExpensesDslAddedServices

/**
 * Dependency injection module that overrides Langium default services and contributes the
 * declared custom services. The Langium defaults can be partially specified to override only
 * selected services, while the custom services must be fully specified.
 */
export const ExpensesDslModule: Module<ExpensesDslServices, PartialLangiumServices & ExpensesDslAddedServices> = {
    validation: {
        ValidationRegistry: (injector) => new ExpensesDslValidationRegistry(injector),
        ExpensesDslValidator: () => new ExpensesDslValidator()
    }
};

/**
 * Inject the full set of language services by merging three modules:
 *  - Langium default services
 *  - Services generated by langium-cli
 *  - Services specified in this file
 */
export function createExpensesDslServices(context?: DefaultModuleContext): ExpensesDslServices {
    return inject(
        createDefaultModule(context),
        ExpensesDslGeneratedModule,
        ExpensesDslModule
    );
}
