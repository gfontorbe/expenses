"use strict";
/******************************************************************************
 * This file was generated by langium-cli 0.2.0.
 * DO NOT EDIT MANUALLY!
 ******************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
exports.reflection = exports.ExpensesDslAstReflection = exports.isModel = exports.Model = exports.isIncome = exports.Income = exports.isExpense = exports.Expense = void 0;
/* eslint-disable @typescript-eslint/array-type */
/* eslint-disable @typescript-eslint/no-empty-interface */
const langium_1 = require("langium");
exports.Expense = 'Expense';
function isExpense(item) {
    return exports.reflection.isInstance(item, exports.Expense);
}
exports.isExpense = isExpense;
exports.Income = 'Income';
function isIncome(item) {
    return exports.reflection.isInstance(item, exports.Income);
}
exports.isIncome = isIncome;
exports.Model = 'Model';
function isModel(item) {
    return exports.reflection.isInstance(item, exports.Model);
}
exports.isModel = isModel;
class ExpensesDslAstReflection {
    getAllTypes() {
        return ['Expense', 'Income', 'Model'];
    }
    isInstance(node, type) {
        return (0, langium_1.isAstNode)(node) && this.isSubtype(node.$type, type);
    }
    isSubtype(subtype, supertype) {
        if (subtype === supertype) {
            return true;
        }
        switch (subtype) {
            default: {
                return false;
            }
        }
    }
    getReferenceType(referenceId) {
        switch (referenceId) {
            default: {
                throw new Error(`${referenceId} is not a valid reference id.`);
            }
        }
    }
}
exports.ExpensesDslAstReflection = ExpensesDslAstReflection;
exports.reflection = new ExpensesDslAstReflection();
//# sourceMappingURL=ast.js.map